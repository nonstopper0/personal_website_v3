{"version":3,"sources":["SCSS/images/edge.svg","SCSS/images/can.svg","Components/Load.svg","SCSS/images/me.jpg","SCSS/images/navcan.svg","Components/Loader.js","Components/Body1.js","Components/Body2.js","Components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Loader","className","alt","id","src","Load","Body1","React","forwardRef","props","ref","Body2","Me","nav","onClick","graffiti","NavCan","scrollC","App","componentDidMount","a","setState","loading","window","addEventListener","onWindowScroll","screen","width","document","querySelector","style","left","typeText","setTimeout","opacity","classList","add","e","console","log","aboutRef","current","offsetTop","windowHeight","innerHeight","scroll","pageYOffset","animation","aboutMe","getBoundingClientRect","top","skills","scrollHeight","scrollController","refName","scrollTo","homeRef","contactRef","downloadRef","state","createRef","removeEventListener","querySelectorAll","i","length","display","Fragment","this","deGraffiti","Edge","Can","height","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"6GAAAA,EAAOC,QAAU,IAA0B,kC,uBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,iBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,qVCa5BC,MARf,WACI,OACI,yBAAKC,UAAU,qBACX,yBAAKC,IAAI,SAASC,GAAG,SAASC,IAAKC,Q,gBCiBhCC,EArBDC,IAAMC,YAAW,SAACC,EAAOC,GACnC,OACI,6BAASA,IAAKA,EAAKT,UAAU,wBACzB,kBAAC,IAAD,CAAaA,UAAU,UACvB,wBAAIE,GAAG,OAAP,aACA,yBAAKF,UAAU,mBACX,yBAAKA,UAAU,YAAf,KACA,yBAAKA,UAAU,kBACX,gDACA,yBAAKE,GAAG,UAEZ,yBAAKF,UAAU,mBACX,uBAAGE,GAAG,QAAN,wBACA,yBAAKA,GAAG,WAEZ,yBAAKF,UAAU,YAAf,U,yBC0CDU,EAxDDJ,IAAMC,YAAW,SAACC,EAAOC,GACnC,OACI,6BAASA,IAAKA,EAAMT,UAAU,wBAC1B,yBAAKA,UAAU,mBACX,yBAAKG,IAAKQ,IAAIV,IAAI,mBAAmBD,UAAU,wBAC/C,yBAAKA,UAAU,wBACX,wCACA,yBAAKA,UAAU,YAAf,KACA,mDACqB,mDADrB,UAEO,sDAFP,qTAQR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,wBACX,mDACA,6BAASA,UAAU,wBACf,6BACI,yCACA,4BACI,sCACA,yCACA,oCACA,mCACA,sCAGR,6BACI,0CACA,4BACI,yCACA,sCACA,uCACA,4CACA,uCAGR,6BACI,wCACA,4BACI,uCACA,0CACA,4CACA,+C,gDCNjBY,MAtCf,SAAaJ,GACT,OACI,6BACI,yBAAKN,GAAG,YACR,4BAAQA,GAAG,SAASW,QAAS,kBAAML,EAAMM,aACrC,yBAAKZ,GAAG,UACJ,uBAAGF,UAAU,UAAb,YACA,yBAAKE,GAAG,YAAYC,IAAKY,IAAQd,IAAI,UAG7C,4BAAQY,QAAS,kBAAML,EAAMQ,QAAQ,UACjC,6BACI,uBAAGhB,UAAU,UAAb,QACA,kBAAC,IAAD,QAGR,4BAAQa,QAAS,kBAAML,EAAMQ,QAAQ,WACjC,6BACI,uBAAGhB,UAAU,UAAb,SACA,kBAAC,IAAD,QAGR,4BAAQa,QAAS,kBAAML,EAAMQ,QAAQ,cACjC,6BACI,uBAAGhB,UAAU,UAAb,YACA,kBAAC,IAAD,QAGR,4BAAQa,QAAS,kBAAML,EAAMQ,QAAQ,aACjC,6BACI,uBAAGhB,UAAU,UAAb,WACA,kBAAC,IAAD,UCiILiB,G,wDA3JX,aAAe,IAAD,8BACV,gBAUJC,kBAXc,sBAWM,8BAAAC,EAAA,sEAEV,EAAKC,SAAS,CAACC,SAAS,IAFd,OAIhBC,OAAOC,iBAAiB,SAAU,EAAKC,gBAEnCF,OAAOG,OAAOC,MAAQ,OAClBd,EAAMe,SAASC,cAAc,QAC7BL,iBAAiB,cAAc,WAC/BX,EAAIiB,MAAMC,KAAO,SAErBlB,EAAIW,iBAAiB,cAAc,WAC/BX,EAAIiB,MAAMC,KAAO,YAerBC,EAAWJ,SAASC,cAAc,SACtCI,YAAW,WACPL,SAASC,cAAc,SAASC,MAAMI,QAAU,IAChDN,SAASC,cAAc,UAAUC,MAAMI,QAAU,IACjDF,EAASG,UAAUC,IAAI,cACxB,KACHH,YAAW,WAAQL,SAASC,cAAc,UAAUC,MAAMI,QAAU,MAAM,KAjC1D,2CAXN,EA+CdT,eAAiB,SAACY,GACdC,QAAQC,IAAI,EAAKC,SAASC,QAAQC,WAClC,IAAIC,EAAepB,OAAOqB,YACtBC,EAAStB,OAAOuB,YAEpBlB,SAASC,cAAc,UAAUC,MAAMiB,UAAY,SACnDnB,SAASC,cAAc,UAAUC,MAAMI,QAAU,IAIjD,IAAIc,EAAUpB,SAASC,cAAc,oBACjCmB,EAAQC,wBAAwBC,IAAMP,EAAa,IAAM,GACzDK,EAAQb,UAAUC,IAAI,kBAE1B,IAAIe,EAASvB,SAASC,cAAc,oBAChCsB,EAAOF,wBAAwBC,IAAMP,EAAa,IAAM,GACxDQ,EAAOhB,UAAUC,IAAI,kBAkBzB,EAAKf,SAAS,CACV+B,aAAcP,KAlFR,EAwGdQ,iBAAmB,SAACC,GAClB,OAAOA,GACL,IAAK,QACH/B,OAAOgC,SAAS,EAAG,EAAKf,SAASC,QAAQC,WACzC,MACF,IAAK,OACHnB,OAAOgC,SAAS,EAAG,EAAKC,QAAQf,QAAQC,WACxC,MACF,IAAK,UACHnB,OAAOgC,SAAS,EAAG,EAAKE,WAAWhB,QAAQC,WAC3C,MACF,IAAK,WACHnB,OAAOgC,SAAS,EAAG,EAAKG,YAAYjB,QAAQC,aAlH9C,EAAKiB,MAAQ,CACTP,aAAc,EACd9B,SAAS,GAEb,EAAKkB,SAAWjC,IAAMqD,YACtB,EAAKF,YAAcnD,IAAMqD,YACzB,EAAKJ,QAAUjD,IAAMqD,YARX,E,mEAuFV,IAAI/C,EAAMe,SAASC,cAAc,OACjChB,EAAIgD,oBAAoB,aACxBhD,EAAIgD,oBAAoB,cACxBtC,OAAOsC,oBAAoB,Y,mCAK3B,IADA,IAAI9C,EAAWa,SAASkC,iBAAiB,aAChCC,EAAI,EAAGA,EAAIhD,EAASiD,OAAQD,IACC,SAA9BhD,EAASgD,GAAGjC,MAAMmC,QAClBlD,EAASgD,GAAGjC,MAAMmC,QAAU,OAE5BlD,EAASgD,GAAGjC,MAAMmC,QAAU,U,+BAyBtC,OACI,kBAAC,IAAMC,SAAP,KACKC,KAAKR,MAAMrC,QAsBd,kBAAC,EAAD,MArBA,yBAAKrB,UAAU,kBACb,yBAAKA,UAAU,YACf,kBAAC,EAAD,CAAKgB,QAASkD,KAAKd,iBAAkBtC,SAAUoD,KAAKC,aACpD,0BAAMnE,UAAU,kBACd,yBAAKA,UAAU,cAAcE,GAAG,MAAMD,IAAI,kBAAkBE,IAAKiE,MACjE,yBAAKpE,UAAU,cAAcE,GAAG,MAAMD,IAAI,kBAAkBE,IAAKiE,MACjE,yBAAKpE,UAAU,cAAcE,GAAG,QAAQD,IAAI,kBAAkBE,IAAKiE,MACnE,yBAAKpE,UAAU,cAAcE,GAAG,OAAOD,IAAI,kBAAkBE,IAAKiE,MAClE,yBAAKpE,UAAU,oBACb,uBAAGA,UAAU,WAAWE,GAAG,oBAA3B,KACA,yBAAKF,UAAU,WAAWE,GAAG,MAAMD,IAAI,MAAME,IAAKkE,OAEpD,kBAAC,EAAD,CAAO5D,IAAKyD,KAAKX,UACjB,kBAAC,EAAD,CAAO9C,IAAKyD,KAAK3B,WACjB,yBAAK9B,IAAKyD,KAAKT,YAAa5B,MAAO,CAACyC,OAAQ,IAAM5C,MAAO,WAE3D,4BAAQ1B,UAAU,cAChB,2E,GAjJEM,IAAMiE,YCCJC,QACW,cAA7BlD,OAAOmD,SAASC,UAEe,UAA7BpD,OAAOmD,SAASC,UAEhBpD,OAAOmD,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFnD,SAASoD,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlD,QAAQkD,MAAMA,EAAMC,c","file":"static/js/main.8877cd7d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/edge.d90c05bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/can.a2d73de3.svg\";","module.exports = __webpack_public_path__ + \"static/media/Load.c8a1f97b.svg\";","module.exports = __webpack_public_path__ + \"static/media/me.76410862.jpg\";","module.exports = __webpack_public_path__ + \"static/media/navcan.467a9f43.svg\";","import React from 'react';\r\nimport './Loader.scss'\r\n\r\nimport Load from './Load.svg';\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div className=\"loader-background\">\r\n            <img alt=\"loader\" id=\"loader\" src={Load}></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport './Body1.scss'\r\nimport { RiMouseLine } from 'react-icons/ri'\r\n\r\nconst Body1 = React.forwardRef((props, ref) => {\r\n    return (\r\n        <section ref={ref} className=\"home-page1-container\">\r\n            <RiMouseLine className=\"mouse\"/>\r\n            <h1 id=\"big\">NATHANIEL</h1>\r\n            <div className=\"home-page1-body\">\r\n                <ins className=\"graffiti\">d</ins>\r\n                <div className=\"home-page1-div\">\r\n                    <h1>Nathaniel Redmon</h1>\r\n                    <div id=\"line\"></div>\r\n                </div>\r\n                <div className=\"home-page1-div2\">\r\n                    <p id=\"type\">Full-stack developer</p>\r\n                    <div id=\"line2\"></div> \r\n                </div>\r\n                <ins className=\"graffiti\">c</ins>\r\n            </div>\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default Body1;","import React from 'react';\r\nimport './Body2.scss'\r\n\r\nimport Me from '../SCSS/images/me.jpg'\r\n\r\nconst Body2 = React.forwardRef((props, ref) => {\r\n    return (\r\n        <section ref={ref}  className=\"home-page2-container\">\r\n            <div className=\"home-page2-box1\">\r\n                <img src={Me} alt=\"Nathaniel Redmon\" className=\"home-page2-box1-img\"></img>\r\n                <div className=\"home-page2-box1-text\">\r\n                    <h2>About me</h2>\r\n                    <ins className=\"graffiti\">c</ins>\r\n                    <p>\r\n                    Currently located in <span>Denver, Colorado.</span>\r\n                    I am a <span>Full-stack developer</span> that loves every aspect of programming. \r\n                    I use my development skills to create my own ideas and businesses while also taking time to learn something new and noteworthy every day. \r\n                    When I'm not working on my next project or idea you can find me out at the race-track or in the mountains doing what I love.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"home-page2-box2\">\r\n                <div className=\"home-page2-box2-text\">\r\n                    <h3>Technologies I use.</h3>\r\n                    <section className=\"home-page2-box2-list\">\r\n                        <div>\r\n                            <h4>Languages</h4>\r\n                            <ul>\r\n                                <li>Python</li>\r\n                                <li>Javscript</li>\r\n                                <li>HTML</li>\r\n                                <li>CSS</li>\r\n                                <li>SASS</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div>\r\n                            <h4>Frameworks</h4>\r\n                            <ul>\r\n                                <li>ExpressJS</li>\r\n                                <li>NodeJS</li>\r\n                                <li>ReactJS</li>\r\n                                <li>React Native</li>\r\n                                <li>Flask</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div>\r\n                            <h4>Services</h4>\r\n                            <ul>\r\n                                <li>MongoDB</li>\r\n                                <li>PostGreSQL</li>\r\n                                <li>Google Cloud</li>\r\n                                <li>Heroku</li>\r\n                            </ul>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default Body2;","import React from 'react';\r\nimport './Nav.scss'\r\nimport {FaHome, FaDownload} from 'react-icons/fa'\r\nimport {MdPerson} from 'react-icons/md'\r\nimport {GoPencil} from 'react-icons/go'\r\nimport NavCan from '../SCSS/images/navcan.svg'\r\n\r\nfunction nav(props) {\r\n    return (\r\n        <nav>\r\n            <div id=\"navLine\"></div>\r\n            <button id=\"canBtn\" onClick={() => props.graffiti()}>\r\n                <div id=\"canDiv\">\r\n                    <p className=\"hidden\">Graffiti</p>\r\n                    <img id=\"canButton\" src={NavCan} alt=\"can\" />\r\n                </div>\r\n            </button>\r\n            <button onClick={() => props.scrollC('home')}>\r\n                <div>\r\n                    <p className=\"hidden\">Home</p>\r\n                    <FaHome />\r\n                </div>\r\n            </button>\r\n            <button onClick={() => props.scrollC('about')}>\r\n                <div>\r\n                    <p className=\"hidden\">About</p>\r\n                    <MdPerson />\r\n                </div>\r\n            </button>\r\n            <button onClick={() => props.scrollC('download')}>\r\n                <div>\r\n                    <p className=\"hidden\">Download</p>\r\n                    <FaDownload />\r\n                </div>\r\n            </button>\r\n            <button onClick={() => props.scrollC('contact')}>\r\n                <div>\r\n                    <p className=\"hidden\">Contact</p>\r\n                    <GoPencil />\r\n                </div>\r\n            </button>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default nav;","import React from 'react';\r\n\r\nimport Can from './SCSS/images/can.svg'\r\nimport Edge from './SCSS/images/edge.svg'\r\n\r\nimport Loader from './Components/Loader.js'\r\nimport Body1 from './Components/Body1.js'\r\nimport Body2 from './Components/Body2.js'\r\nimport Nav from './Components/Nav.js'\r\nimport './App.scss';\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            scrollHeight: 0,\r\n            loading: true\r\n        }\r\n        this.aboutRef = React.createRef();\r\n        this.downloadRef = React.createRef();\r\n        this.homeRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n\r\n        await this.setState({loading: false})\r\n\r\n        window.addEventListener('scroll', this.onWindowScroll);\r\n\r\n        if (window.screen.width > 500) {\r\n            let nav = document.querySelector('nav')\r\n            nav.addEventListener('mouseenter', () => {\r\n                nav.style.left = '0px'\r\n            })\r\n            nav.addEventListener('mouseleave', () => {\r\n                nav.style.left = '-65px'\r\n            })\r\n        }\r\n      \r\n      \r\n        //blur the window\r\n        // window.onblur = () => {\r\n        //     document.querySelector('.blurBox').style.opacity = '1'\r\n        // }\r\n        // window.onfocus = () => {\r\n        //     document.querySelector('.blurBox').style.opacity = '0'\r\n        // }\r\n      \r\n      \r\n        // mainText typing javascript\r\n        let typeText = document.querySelector('#line');\r\n        setTimeout(() => {\r\n            document.querySelector('#type').style.opacity = '1'\r\n            document.querySelector('#line2').style.opacity = '1'\r\n            typeText.classList.add('blinking')\r\n        }, 2000)\r\n        setTimeout(() => { document.querySelector('#line2').style.opacity = '0'}, 3000)\r\n    }\r\n\r\n    onWindowScroll = (e) => {\r\n        console.log(this.aboutRef.current.offsetTop)\r\n        let windowHeight = window.innerHeight\r\n        let scroll = window.pageYOffset\r\n    \r\n        document.querySelector('.mouse').style.animation = \"normal\"\r\n        document.querySelector('.mouse').style.opacity = \"0\"\r\n  \r\n    \r\n        // Load in elements\r\n        let aboutMe = document.querySelector('.home-page2-box1')\r\n        if (aboutMe.getBoundingClientRect().top - windowHeight/1.2 < 0) {\r\n            aboutMe.classList.add('fade-animation')\r\n        }\r\n        let skills = document.querySelector('.home-page2-box2') \r\n        if (skills.getBoundingClientRect().top - windowHeight/1.2 < 0) {\r\n            skills.classList.add('fade-animation')\r\n        }            \r\n      \r\n        // let leeway = 100\r\n        // if (window.screen.width > 600) { \r\n        //     leeway = 300\r\n        // }\r\n        // check if the scrollbar is moving up or down by comparing last marked scroll position and current\r\n            // if (this.state.scrollHeight > scroll) {\r\n            //     if (aboutMe.getBoundingClientRect().bottom > -100 && aboutMe.getBoundingClientRect().bottom < leeway) {\r\n            //         aboutMe.classList.remove('blurred')\r\n            //     }\r\n            // } else if (this.state.scrollHeight < scroll) {\r\n            //     if (aboutMe.getBoundingClientRect().bottom > -100 && aboutMe.getBoundingClientRect().bottom < leeway) {\r\n            //         aboutMe.classList.add('blurred')\r\n            //     }\r\n            // }\r\n        // set scroll position to check it the next time a scroll is performed\r\n        this.setState({\r\n            scrollHeight: scroll\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        let nav = document.querySelector('nav')\r\n        nav.removeEventListener('mouseover')\r\n        nav.removeEventListener('mouseleave')\r\n        window.removeEventListener('scroll')\r\n    }\r\n\r\n    deGraffiti() {\r\n        let graffiti = document.querySelectorAll('.graffiti')\r\n        for (let i = 0; i < graffiti.length; i++) {\r\n            if (graffiti[i].style.display !== 'none') {\r\n                graffiti[i].style.display = 'none'\r\n            } else {\r\n                graffiti[i].style.display = 'block'\r\n            }\r\n        }\r\n    }\r\n\r\n    scrollController = (refName) => {\r\n      switch(refName) {\r\n        case 'about':\r\n          window.scrollTo(0, this.aboutRef.current.offsetTop)\r\n          break;\r\n        case 'home': \r\n          window.scrollTo(0, this.homeRef.current.offsetTop)\r\n          break;\r\n        case 'contact': \r\n          window.scrollTo(0, this.contactRef.current.offsetTop)\r\n          break;\r\n        case 'download':\r\n          window.scrollTo(0, this.downloadRef.current.offsetTop)\r\n          break;\r\n        default: \r\n          break;\r\n      }\r\n    } \r\n\r\n    render() {\r\n      return (\r\n          <React.Fragment>\r\n            { !this.state.loading ? \r\n            <div className=\"page-container\">\r\n              <div className=\"blurBox\"></div>\r\n              <Nav scrollC={this.scrollController} graffiti={this.deGraffiti}/>\r\n              <main className=\"home-container\">\r\n                <img className=\"home-corner\" id=\"one\" alt=\"corner addition\" src={Edge}/>\r\n                <img className=\"home-corner\" id=\"two\" alt=\"corner addition\" src={Edge}/>\r\n                <img className=\"home-corner\" id=\"three\" alt=\"corner addition\" src={Edge}/>\r\n                <img className=\"home-corner\" id=\"four\" alt=\"corner addition\" src={Edge}/>\r\n                <div className=\"home-decorations\">\r\n                  <p className=\"graffiti\" id=\"home-decoration1\">i</p>\r\n                  <img className=\"graffiti\" id=\"can\" alt=\"can\" src={Can}/>\r\n                </div>\r\n                <Body1 ref={this.homeRef} />\r\n                <Body2 ref={this.aboutRef} />\r\n                <div ref={this.downloadRef} style={{height: 1000, width: '100%'}}></div>\r\n              </main>\r\n              <footer className=\"app-footer\">\r\n                <p>&copy; Copyright 2020. Nathaniel Redmon</p>\r\n              </footer>\r\n            </div>\r\n            :\r\n            <Loader />\r\n            }\r\n          </React.Fragment>\r\n          )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}